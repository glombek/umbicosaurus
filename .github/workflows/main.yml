# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup NuGet.exe for use with actions
        # You may pin to the exact commit or the version.
        # uses: NuGet/setup-nuget@04b0c2b8d1b97922f67eca497d7cf0bf17b8ffe1
        uses: NuGet/setup-nuget@v1.0.5
        with:
          # NuGet version to install. Can be `latest`, `preview`, a concrete version like `5.3.1`, or a semver range specifier like `5.x`.
          nuget-version: latest # optional, default is latest
          # NuGet API Key to configure.
          #nuget-api-key: # optional
          # Source to scope the NuGet API Key to.
          #nuget-api-key-source: # optional  

      - name: Setup .net core
        uses: actions/setup-dotnet@v1.4.0
      
      - name: Setup UmbPack
        run: dotnet tool install Umbraco.Tools.Packages --global

      - name: Create Umbraco package file
        run: UmbPack pack ./Umbicosaurus/Umbicosaurus.Demo/package.xml -o ${{ env.OUTPUT }} -v 0.1.${{ github.run_id }}
      
      - name: Push to Our
        run: umbpack push -k ${{ secrets.UMBRACO_DEPLOY_KEY }} ${{ env.Output }}\PackageWorkshopDashboard_0.1.${{ github.run_id }}.zip
