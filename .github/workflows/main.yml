# This is a basic workflow to help you get started with Actions

name: CI

env:
  OUTPUT: ./Output
  LIBRARY_FOLDER: ./umbraco/Umbicosaurus.Demo
  CONFIG: release

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    #branches: [ main ]
    tags
    - v[0-9]+.[0-9]+.[0-9]+
  # pull_request:
  #   branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set VERSION variable from tag
        run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV

      - name: Setup NuGet.exe for use with actions
        # You may pin to the exact commit or the version.
        # uses: NuGet/setup-nuget@04b0c2b8d1b97922f67eca497d7cf0bf17b8ffe1
        uses: NuGet/setup-nuget@v1.0.5
        with:
          # NuGet version to install. Can be `latest`, `preview`, a concrete version like `5.3.1`, or a semver range specifier like `5.x`.
          nuget-version: latest # optional, default is latest
          # NuGet API Key to configure.
          nuget-api-key: ${{ secrets.NUGET_DEPLOY_KEY }}# optional
          # Source to scope the NuGet API Key to.
          nuget-api-key-source: https://api.nuget.org/v3/index.json# optional  

      # - name: Create NuGet package file
      #   run: dotnet pack ${{ env.LIBRARY_FOLDER }} -c ${{ env.CONFIG }} --no-build --include-symbols -o ${{ env.OUTPUT }} /p:version=${VERSION}

      - name: Create NuGet package (nuget.exe)
        run: nuget.exe pack ${{ env.LIBRARY_FOLDER }}/Umbicosaurus.nuspec -OutputDirectory ${{ env.OUTPUT }} -Version ${VERSION}

        
      - name: Push NuGet package (nuget.exe)
        run: nuget.exe push ${{ env.OUTPUT }}/Umbicosaurus.${VERSION}.nupkg -ApiKey ${{ secrets.NUGET_DEPLOY_KEY }} -Source https://api.nuget.org/v3/index.json


      # # For the push step to work you will need to create an api key on NuGet, and save it as a secret on Github with the name "NUGET_DEPLOY_KEY"
      # - name: Push package to NuGet
      #   run: dotnet nuget push ${{ env.OUTPUT }}/*.nupkg -k ${{ secrets.NUGET_DEPLOY_KEY }} -s https://api.nuget.org/v3/index.json

      - name: Setup .net core
        uses: actions/setup-dotnet@v1.4.0
      
      - name: Setup UmbPack
        run: dotnet tool install Umbraco.Tools.Packages --global

      - name: Create Umbraco package file
        run: UmbPack pack ./umbraco/package.xml -o ${{ env.OUTPUT }} -v ${VERSION}
      
      - name: Push to Our
        run: umbpack push -k ${{ secrets.UMBRACO_DEPLOY_KEY }} ${{ env.Output }}/Umbicosaurus_${VERSION}.zip
